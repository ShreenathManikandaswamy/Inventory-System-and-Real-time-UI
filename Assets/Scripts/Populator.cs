using System.Collections; using System.Collections.Generic; using UnityEngine; using UnityEngine.UI; using System;  public class Populator : MonoBehaviour {     public Texture2D[] availableIcon;     public RectTransform prefab;     public Text countText;     public ScrollRect scrollview;     public RectTransform content;      List<ExampleItemView> views = new List<ExampleItemView>();      public void UpdateItems()     {         int newCount;         int.TryParse(countText.text, out newCount);         StartCoroutine(FetchItemModelsFromServer(newCount, results => OnReceivedNewModels(results)));     }      void OnReceivedNewModels(ExamplaItemModel[] models)     {         foreach (Transform child in content)             Destroy(child.gameObject);          views.Clear();          int i = 0;         foreach (var model in models)         {             var instance = GameObject.Instantiate(prefab.gameObject) as GameObject;             instance.transform.SetParent(content, false);             var View = InitializeItemView(instance, model);             views.Add(View);             ++i;         }     }      ExampleItemView InitializeItemView(GameObject viewGameObject, ExamplaItemModel model)     {         ExampleItemView view = new ExampleItemView(viewGameObject.transform);          view.titleText.text = model.title;         view.icon1Image.texture = availableIcon[model.icon1Index];         view.icon2Image.texture = availableIcon[model.icon2Index];         view.icon3Image.texture = availableIcon[model.icon3Index];          return view;     }      IEnumerator FetchItemModelsFromServer(int count, Action<ExamplaItemModel[]> onDone)     {         //Simulating Server Delay         yield return new WaitForSeconds(2f);          var results = new ExamplaItemModel[count];         for (int i = 0; i < count; ++i)         {             results[i] = new ExamplaItemModel();             results[i].title = "Instance" + i;             results[i].icon1Index = UnityEngine.Random.Range(0, availableIcon.Length);             results[i].icon2Index = UnityEngine.Random.Range(0, availableIcon.Length);             results[i].icon3Index = UnityEngine.Random.Range(0, availableIcon.Length);          }          onDone(results);     }      public class ExampleItemView     {         public Text titleText;         public RawImage icon1Image, icon2Image, icon3Image;          public ExampleItemView(Transform rootView)         {             titleText = rootView.Find("TitlePanel/TitleText").GetComponent<Text>();             icon1Image = rootView.Find("IconImage1").GetComponent<RawImage>();             icon2Image = rootView.Find("IconImage2").GetComponent<RawImage>();             icon3Image = rootView.Find("TitlePanel/IconImage3").GetComponent<RawImage>();         }      }      public class ExamplaItemModel     {         public string title;         public int icon1Index, icon2Index, icon3Index;     } }  